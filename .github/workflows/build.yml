name: CI build

on:
  push:
    branches: main
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    name: 🚧${{ matrix.config.icon }} ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              icon: "🟦", name: "Windows-GCC",
              os: windows-latest,
              build_type: "Release",
              cc: "gcc.exe",
              cxx: "g++.exe",
              cache: "sccache",
              tools_dir: "C:/mingw64/bin/",
              dev: ".bat"
            }
          - {
              icon: "🟦", name: "Windows-Clang",
              os: windows-latest,
              build_type: "Release",
              cc: "clang.exe",
              cxx: "clang++.exe",
              cache: "sccache",
              tools_dir: "C:/mingw64/bin/",
              dev: ".bat"
            }
          - {
              icon: "🟧", name: "Ubuntu-GCC",
              os: ubuntu-latest,
              build_type: "Release",
              cc: "gcc",
              cxx: "g++",
              cache: "ccache",
              tools_dir: "",
              dev: ".sh"
            }
          - {
              icon: "🟧", name: "Ubuntu-Clang",
              os: ubuntu-latest,
              build_type: "Release",
              cc: "clang",
              cxx: "clang++",
              cache: "ccache",
              tools_dir: "",
              dev: ".sh"
            }

    steps:
    - name: 🤖 Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
        ref: ${{ github.event.pull_request.head.sha }}
        submodules: recursive

    - if: ${{ runner.os == 'Windows' }}
      name: 💾 Un-Cache WinLibs
      id: cache-winlibs
      uses: actions/cache@v3
      env:
        cache-name: cache-winlibs-tools
      with:
        path: C:\mingw64
        key: ${{ runner.os }}-${{ env.cache-name }}-r5

    - if: ${{ runner.os == 'Windows' && steps.cache-winlibs.outputs.cache-hit != 'true' }}
      name: 📥 Download Windows Dependencies
      run: |
        Invoke-WebRequest -Uri https://github.com/brechtsanders/winlibs_mingw/releases/download/12.2.0-16.0.0-10.0.0-ucrt-r5/winlibs-x86_64-posix-seh-gcc-12.2.0-llvm-16.0.0-mingw-w64ucrt-10.0.0-r5.zip -OutFile C:\winlibs.zip
        Expand-Archive C:\winlibs.zip -DestinationPath C:\

    - if: ${{ runner.os == 'Linux' }}
      name: 📥 Download Linux Dependencies
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: ninja-build libx11-dev libx11-xcb-dev libxkbcommon-x11-dev libgl-dev libglx-dev xorg-dev libglu1-mesa-dev ccache
        version: 1.0

    - name: 🐍 Install python dependencies
      run: pip install -r ./dunois/requirements.txt

    - if: ${{ runner.os == 'Linux' }}
      name: ⚙️ Configure Linux
      run: |
        chown $(whoami) ./dunois/dev.sh
        chmod +x ./dunois/dev.sh

    - name: 🧰 Cache previous build
      id: cache-previous-build
      uses: actions/cache@v3
      env:
        cache-name: cache-previous-build
      with:
        path: build/
        key: ${{ matrix.config.name }}-${{ matrix.config.build_type }}-${{ env.cache-name }}

    - if: ${{ runner.os == 'Linux' }}
      name: 🧰 Linux ccache
      uses: hendrikmuhs/ccache-action@v1.2.8
      with:
        variant: ccache
        key: ${{ matrix.config.name }}-${{ matrix.config.build_type }}-ccache

    - if: ${{ runner.os == 'Windows' }}
      name: 🧰 Windows ccache
      uses: hendrikmuhs/ccache-action@v1.2.8
      with:
        variant: sccache
        key: ${{ matrix.config.name }}-${{ matrix.config.build_type }}-ccache

    - name: 🔨 Build
      run: >
        ./dunois/dev${{ matrix.config.dev }}
        configure -cc=${{ matrix.config.tools_dir }}${{ matrix.config.cc }} -cxx=${{ matrix.config.tools_dir }}${{ matrix.config.cxx }} -cl=${{ matrix.config.cache }} -cxxl=${{ matrix.config.cache }}
        build -bt=${{ matrix.config.build_type }} install -bt=${{ matrix.config.build_type }}

    - name: 📤 Upload
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.config.name }}-${{ matrix.config.build_type }}
        path: build/dist
