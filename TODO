Priority:
    Text rendering
      String batch? Cache rendered strings as their own texture?
    core/helpers.hpp - Assert(test, "Failure message") - candidate for yuki.
    Animated sprites
    Optimized tilemap renderer
    Serialization
    Threads
      Thread wrappers/utils/just go full job system?
      Threaded asset loading
      Render thread


ascension:
    Debug:
        ☐ Debug user interface
        ☐ Rendering
    Graphics:
        ✔ Spritebatch rewrite/performance improvement @done(23-07-15 20:42)
        ☐ Text rendering @started(22-07-18 18:20)
        ☐ Animation
        ☐ UI
        ☐ Resolution & display mode settings
        ✔ Texture atlas @done(23-07-15 20:42)
        ☐ Layer stacks
        ☐ Particle system
    Audio:
        ☐ Sound effects
        ☐ Music
        ☐ Mixing
        ☐ Audio settings
    Serialization:
        ☐ Implement BSON wrapper https://github.com/nlohmann/json
        Assets:
            ☐ Move assets to use BSON
        Player data:
            ☐ Save file
            ☐ Settings
        World data:
            ☐ World state
    Event System:
        ✔ Input events @done(23-07-15 20:44)
        ☐ Audio listeners
    Assets:
        ☐ Threaded asset loading
        ☐ Asset streaming
    Scene Management:
        ☐ Scene state
        ☐ Swapping scenes
        ☐ Scene stacks
    Behaviour/AI Management:
        Scripting:
            ☐ Allow simple behavioural scripting?
        ☐ State management for AI actors
        ☐ Library of basic AI
    Game Objects:
        ☐ Decide architecture
        Lifetime:
            ☐ Creation
            ☐ Updating
            ☐ Deletion
        ☐ Messaging system
    Pathfinding:
        ☐ A*
        ☐ JPS+ (jump point search)
    Physics:
        ☐ Movement speeds
        ☐ Collision
    Procedural Generation:
        ☐ Deterministic RNG
        ☐ Wave function collapse
    Plugin System:
        ☐ Swap to plugin system demo'ed in erika
        Rendering:
            ☐ OpenGL
            ☐ DirectX11
        ☐ Game code as reloadable plugin
    Modding:
        ☐ Create plugin mods
        ☐ Define modding API
